/*************************************************************************************/

//                                                                                     

// Description: LIN Description file created using Vector's DaVinci Network Designer   

// Created:     07 Sep 2007 15:12:10

// Author:      Vector Informatik GmbH

// Version:     0.1                                                                    

//                                                                                     

/*************************************************************************************/

LIN_description_file;
LIN_protocol_version = "2.2";
LIN_language_version = "2.2";
LIN_speed = 19.2 kbps;

Nodes {
  Master: LINMaster, 10 ms, 0.1 ms ;
  Slaves: LinSlave ;
}

Signals {
  Ramp: 8, 0, LINMaster, LinSlave ;
  constant_Signal: 8, 0, LINMaster, LinSlave ;
  Sine: 8, 0, LINMaster, LinSlave ;
  error: 1, 0, LinSlave, LINMaster ;
}

Diagnostic_signals {
  MasterReqB0: 8, 0 ;
  MasterReqB1: 8, 0 ;
  MasterReqB2: 8, 0 ;
  MasterReqB3: 8, 0 ;
  MasterReqB4: 8, 0 ;
  MasterReqB5: 8, 0 ;
  MasterReqB6: 8, 0 ;
  MasterReqB7: 8, 0 ;
  SlaveRespB0: 8, 0 ;
  SlaveRespB1: 8, 0 ;
  SlaveRespB2: 8, 0 ;
  SlaveRespB3: 8, 0 ;
  SlaveRespB4: 8, 0 ;
  SlaveRespB5: 8, 0 ;
  SlaveRespB6: 8, 0 ;
  SlaveRespB7: 8, 0 ;
}



Frames {
  LinExtra: 34, LINMaster, 1 {
    constant_Signal, 0 ;
  }
  LinMsg1: 48, LINMaster, 2 {
    Sine, 0 ;
    Ramp, 8 ;
  }
  LinMsg2: 38, LINMaster, 1 {
    constant_Signal, 0 ;
  }
  LinStatus: 39, LinSlave, 1 {
    error, 0 ;
  }
}


Diagnostic_frames {
  MasterReq: 0x3c {
    MasterReqB0, 0 ;
    MasterReqB1, 8 ;
    MasterReqB2, 16 ;
    MasterReqB3, 24 ;
    MasterReqB4, 32 ;
    MasterReqB5, 40 ;
    MasterReqB6, 48 ;
    MasterReqB7, 56 ;
  }
  SlaveResp: 0x3d {
    SlaveRespB0, 0 ;
    SlaveRespB1, 8 ;
    SlaveRespB2, 16 ;
    SlaveRespB3, 24 ;
    SlaveRespB4, 32 ;
    SlaveRespB5, 40 ;
    SlaveRespB6, 48 ;
    SlaveRespB7, 56 ;
  }
}

Node_attributes {
  LinSlave{
    LIN_protocol = "2.2" ;
    configured_NAD = 0x5 ;
    initial_NAD = 0x5 ;
    product_id = 0x1e, 0x2, 1 ;
    response_error = error ;
    P2_min = 50 ms ;
    ST_min = 0 ms ;
    configurable_frames {
      LinMsg1;
	  LinMsg2;
	  LinExtra;
	  LinStatus;
    }
  }
}

Schedule_tables {
 Main_table {
    LinMsg1 delay 30 ms ;
    LinMsg2 delay 30 ms ;
	LinStatus delay 30 ms ;
  }
 Extra_Table {
    LinExtra delay 10 ms ;
	LinStatus delay 10 ms ;
  }
}


Signal_encoding_types {
  constant_Signal_Sig_Type {
    physical_value, 0, 255, 1, 0 ;
  }
  Sine_Sig_Type {
    physical_value, 0, 255, 1, 0 ;
  }
  StandardPhys_Sig_Type {
    physical_value, 0, 0, 1, 0 ;
  }
}

Signal_representation {
  Sine_Sig_Type: Sine ;
  StandardPhys_Sig_Type: Ramp ;
  constant_Signal_Sig_Type: constant_Signal ;
}
